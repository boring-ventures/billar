generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

model Profile {
  id                    String                 @id @default(uuid()) @db.Uuid
  userId                String                 @unique @db.Uuid
  companyId             String?                @map("company_id") @db.Uuid
  avatarUrl             String?
  firstName             String?                @map("first_name")
  lastName              String?                @map("last_name")
  role                  UserRole               @default(SELLER)
  active                Boolean                @default(true)
  createdAt             DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime               @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  company               Company?               @relation(fields: [companyId], references: [id])
  tableSessions         TableSession[]
  tableActivityLogs     TableActivityLog[]
  financialReports      FinancialReport[]
  posOrders             PosOrder[]

  @@index([companyId, userId])
  @@map("profiles")
  @@schema("public")
}


model Company {
  id                    String                 @id @default(uuid()) @db.Uuid
  name                  String
  address               String?
  phone                 String?
  createdAt             DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  inventoryCategories   InventoryCategory[]
  inventoryItems        InventoryItem[]
  posOrders             PosOrder[]
  profiles              Profile[]
  tables                Table[]
  financialReports      FinancialReport[]

  @@map("companies")
  @@schema("public")
}

model Table {
  id           String             @id @default(uuid()) @db.Uuid
  companyId    String             @map("company_id") @db.Uuid
  name         String
  status       TableStatus        @default(AVAILABLE)
  hourlyRate   Decimal?           @map("hourly_rate") @db.Decimal(10, 2)
  createdAt    DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime           @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  maintenances TableMaintenance[]
  reservations TableReservation[]
  sessions     TableSession[]
  activityLogs TableActivityLog[]
  company      Company            @relation(fields: [companyId], references: [id])

  @@map("tables")
  @@schema("public")
}

model TableActivityLog {
  id            String      @id @default(uuid()) @db.Uuid
  tableId       String      @map("table_id") @db.Uuid
  previousStatus TableStatus
  newStatus     TableStatus
  changedAt     DateTime    @default(now()) @map("changed_at") @db.Timestamptz(6)
  changedById   String?     @map("changed_by") @db.Uuid
  notes         String?
  table         Table       @relation(fields: [tableId], references: [id])
  changedBy     Profile?    @relation(fields: [changedById], references: [id])

  @@map("table_activity_logs")
  @@schema("public")
}

model TableSession {
  id          String        @id @default(uuid()) @db.Uuid
  tableId     String        @map("table_id") @db.Uuid
  staffId     String?       @map("staff_id") @db.Uuid
  startedAt   DateTime      @map("started_at") @db.Timestamptz(6)
  endedAt     DateTime?     @map("ended_at") @db.Timestamptz(6)
  totalCost   Decimal?      @map("total_cost") @db.Decimal(10, 2)
  status      SessionStatus @default(ACTIVE)
  staffNotes  String?       @map("staff_notes")
  createdAt   DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  posOrders   PosOrder[]
  trackedItems SessionTrackedItem[]
  staff       Profile?      @relation(fields: [staffId], references: [id])
  table       Table         @relation(fields: [tableId], references: [id])

  @@map("table_sessions")
  @@schema("public")
}

model TableMaintenance {
  id            String   @id @default(uuid()) @db.Uuid
  tableId       String   @map("table_id") @db.Uuid
  description   String?
  maintenanceAt DateTime @map("maintenance_at") @db.Timestamptz(6)
  cost          Decimal? @db.Decimal(10, 2)
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  table         Table    @relation(fields: [tableId], references: [id])

  @@map("table_maintenance")
  @@schema("public")
}

model Customer {
  id            String             @id @default(uuid()) @db.Uuid
  name          String
  phone         String?
  address       String?
  createdAt     DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime           @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  reservations  TableReservation[]

  @@map("customers")
  @@schema("public")
}

model TableReservation {
  id              String            @id @default(uuid()) @db.Uuid
  tableId         String            @map("table_id") @db.Uuid
  customerId      String?           @map("customer_id") @db.Uuid
  reservedFrom    DateTime          @map("reserved_from") @db.Timestamptz(6)
  reservedTo      DateTime          @map("reserved_to") @db.Timestamptz(6)
  status          ReservationStatus @default(PENDING)
  paymentStatus   PaymentStatus     @default(UNPAID)
  advanceAmount   Decimal?          @map("advance_amount") @db.Decimal(10, 2)
  createdAt       DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime          @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  table           Table             @relation(fields: [tableId], references: [id])
  customer        Customer?         @relation(fields: [customerId], references: [id])

  @@map("table_reservations")
  @@schema("public")
}

model InventoryCategory {
  id          String          @id @default(uuid()) @db.Uuid
  companyId   String          @map("company_id") @db.Uuid
  name        String
  description String?
  createdAt   DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime        @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  company     Company         @relation(fields: [companyId], references: [id])
  items       InventoryItem[]

  @@map("inventory_categories")
  @@schema("public")
}

model InventoryItem {
  id                String                 @id @default(uuid()) @db.Uuid
  companyId         String                 @map("company_id") @db.Uuid
  categoryId        String?                @map("category_id") @db.Uuid
  name              String
  sku               String?                @unique
  quantity          Int                    @default(0)
  criticalThreshold Int                    @default(5) @map("critical_threshold")
  price             Decimal?               @db.Decimal(10, 2)
  lastStockUpdate   DateTime?              @map("last_stock_update") @db.Timestamptz(6)
  stockAlerts       Boolean                @default(true) @map("stock_alerts")
  createdAt         DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime               @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  category          InventoryCategory?     @relation(fields: [categoryId], references: [id])
  company           Company                @relation(fields: [companyId], references: [id])
  posOrderItems     PosOrderItem[]
  stockMovements    StockMovement[]
  trackedItems      SessionTrackedItem[]

  @@map("inventory_items")
  @@schema("public")
}

model StockMovement {
  id            String          @id @default(uuid()) @db.Uuid
  itemId        String          @map("item_id") @db.Uuid
  quantity      Int
  type          MovementType
  costPrice     Decimal?        @map("cost_price") @db.Decimal(10, 2)
  reason        String?
  reference     String?
  createdAt     DateTime        @default(now()) @map("created_at") @db.Timestamptz(6)
  createdBy     String?         @map("created_by") @db.Uuid
  item          InventoryItem   @relation(fields: [itemId], references: [id])

  @@map("stock_movements")
  @@schema("public")
}

model PosOrder {
  id                    String                 @id @default(uuid()) @db.Uuid
  companyId             String                 @map("company_id") @db.Uuid
  staffId               String?                @map("staff_id") @db.Uuid
  tableSessionId        String?                @map("table_session_id") @db.Uuid
  amount                Decimal?               @map("amount") @db.Decimal(10, 2)
  paymentMethod         PaymentMethod          @default(CASH)
  paymentStatus         PaymentStatus          @default(UNPAID)
  createdAt             DateTime               @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime               @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  orderItems            PosOrderItem[]
  company               Company                @relation(fields: [companyId], references: [id])
  tableSession          TableSession?          @relation(fields: [tableSessionId], references: [id])
  staff                 Profile?               @relation(fields: [staffId], references: [id])

  @@map("pos_orders")
  @@schema("public")
}

model PosOrderItem {
  id                   String                @id @default(uuid()) @db.Uuid
  orderId              String                @map("order_id") @db.Uuid
  itemId               String                @map("item_id") @db.Uuid
  quantity             Int
  unitPrice            Decimal               @map("unit_price") @db.Decimal(10, 2)
  item                 InventoryItem         @relation(fields: [itemId], references: [id])
  order                PosOrder              @relation(fields: [orderId], references: [id])

  @@map("pos_order_items")
  @@schema("public")
}

// Financial models
model FinancialReport {
  id                  String               @id @default(uuid()) @db.Uuid
  companyId           String               @map("company_id") @db.Uuid
  name                String
  reportType          ReportType
  startDate           DateTime             @map("start_date") @db.Timestamptz(6)
  endDate             DateTime             @map("end_date") @db.Timestamptz(6)
  
  // Income summary
  salesIncome         Decimal              @map("sales_income") @db.Decimal(10, 2)
  tableRentIncome     Decimal              @map("table_rent_income") @db.Decimal(10, 2)
  otherIncome         Decimal              @map("other_income") @db.Decimal(10, 2)
  totalIncome         Decimal              @map("total_income") @db.Decimal(10, 2)
  
  // Expense summary
  inventoryCost       Decimal              @map("inventory_cost") @db.Decimal(10, 2)
  maintenanceCost     Decimal              @map("maintenance_cost") @db.Decimal(10, 2)
  staffCost           Decimal              @map("staff_cost") @db.Decimal(10, 2)
  utilityCost         Decimal              @map("utility_cost") @db.Decimal(10, 2)
  otherExpenses       Decimal              @map("other_expenses") @db.Decimal(10, 2)
  totalExpense        Decimal              @map("total_expense") @db.Decimal(10, 2)
  
  // Results
  netProfit           Decimal              @map("net_profit") @db.Decimal(10, 2)
  notes               String?
  generatedAt         DateTime             @default(now()) @map("generated_at") @db.Timestamptz(6)
  generatedById       String?              @map("generated_by_id") @db.Uuid
  generatedBy         Profile?             @relation(fields: [generatedById], references: [id])
  company             Company              @relation(fields: [companyId], references: [id])

  @@map("financial_reports")
  @@schema("public")
}

enum UserRole {
  SELLER
  ADMIN
  SUPERADMIN

  @@schema("public")
}

enum TableStatus {
  AVAILABLE
  OCCUPIED
  RESERVED
  MAINTENANCE

  @@schema("public")
}

enum SessionStatus {
  ACTIVE
  COMPLETED
  CANCELLED

  @@schema("public")
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED

  @@schema("public")
}

enum PaymentStatus {
  UNPAID
  PAID

  @@schema("public")
}

enum MovementType {
  PURCHASE
  SALE
  ADJUSTMENT
  RETURN
  TRANSFER

  @@schema("public")
}

enum PaymentMethod {
  CASH
  QR
  CREDIT_CARD

  @@schema("public")
}

enum ReportType {
  DAILY
  WEEKLY
  MONTHLY
  QUARTERLY
  ANNUAL
  CUSTOM

  @@schema("public")
}

enum FinanceCategoryType {
  INCOME
  EXPENSE

  @@schema("public")
}

model SessionTrackedItem {
  id            String      @id @default(uuid()) @db.Uuid
  tableSessionId String     @map("table_session_id") @db.Uuid
  itemId        String      @map("item_id") @db.Uuid
  quantity      Int
  unitPrice     Decimal     @map("unit_price") @db.Decimal(10, 2)
  createdAt     DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime    @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  tableSession  TableSession @relation(fields: [tableSessionId], references: [id])
  item          InventoryItem @relation(fields: [itemId], references: [id])

  @@map("session_tracked_items")
  @@schema("public")
}